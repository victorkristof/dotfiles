# Tips {{{1

# Bindings:
# - to see current bindings:
#     :list-keys [-T copy-mode{,-vi}]
#
# - to see all bindable keys:
#     https://raw.githubusercontent.com/tmux/tmux/master/key-string.c

# Change prefix to backtick
unbind-key C-b
set -g prefix '`'
bind-key '`' send-prefix

# Fix to get solarised working for vim in tmux
# set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Mouse support
set -g mouse on

# Remove delay in vim after hitting escape
set -sg escape-time 0

# Increase history size
set -g history-limit 10000

# Start window numbers from 1
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# So you don't end up with window numbers like: 0 1 4 5 6
set-option -g renumber-windows on

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Center the window list
set -g status-justify centre

# Splits as in vim
bind-key v split-window -h
bind-key s split-window -v

# Bind l to interactively choose sessions
bind-key l choose-session

# Open new windows/splits with the path of the current pane.
unbind c
bind c new-window -c "#{pane_current_path}"

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# Use the system clipboard
set-option -g default-command "reattach-to-user-namespace -l bash"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# vim-style yank-paste tmux buffers
unbind Escape
bind Escape copy-mode

bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi V send -X select-line
bind -Tcopy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection-and-cancel
bind -Tcopy-mode-vi Escape send -X cancel

unbind p
bind p paste-buffer
# bind C-p choose-buffer

# vim-style yank/paste to X primary
# bind -Tcopy-mode-vi Y send -X copy-pipe "xsel --input --primary"
bind -Tcopy-mode-vi Y send -X copy-pipe-and-cancel "xsel --input --primary"
bind P run "xsel --output --primary | tmux load-buffer - && tmux paste-buffer"

# vim-style yank/paste to X clipboard
# bind -Tcopy-mode-vi C-c send -X copy-pipe "xsel --input --clipboard"
bind -Tcopy-mode-vi C-c send -X copy-pipe-and-cancel "xsel --input --clipboard"
bind C-v run "xsel --output --clipboard | tmux load-buffer - && tmux paste-buffer"

# # Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Reload tmux config
bind r source-file ~/.tmux.conf

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Configure status line
if-shell "test -f ~/.dotfiles/tmux-status-line.conf" "source ~/.dotfiles/tmux-status-line.conf"

# Plugins (with Tmux Plugin Manager)
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Continuum
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-vim 'session'

# Sessionist
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
